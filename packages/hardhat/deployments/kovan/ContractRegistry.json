{
  "address": "0x569FBdE83c90FBe7136806f94467A43C17F88913",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IACLRegistry",
          "name": "_aclRegistry",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_name",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_version",
          "type": "bytes32"
        }
      ],
      "name": "ContractAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_name",
          "type": "bytes32"
        }
      ],
      "name": "ContractDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_name",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_version",
          "type": "bytes32"
        }
      ],
      "name": "ContractUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "aclRegistry",
      "outputs": [
        {
          "internalType": "contract IACLRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_name",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_version",
          "type": "bytes32"
        }
      ],
      "name": "addContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "contractNames",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "contracts",
      "outputs": [
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "version",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_name",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_contractIndex",
          "type": "uint256"
        }
      ],
      "name": "deleteContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_name",
          "type": "bytes32"
        }
      ],
      "name": "getContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractNames",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_name",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_newAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_version",
          "type": "bytes32"
        }
      ],
      "name": "updateContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9b54e632c00be2225fadd3aea7f391d377d2be4c275f44aa38023fc2bcc052e7",
  "receipt": {
    "to": null,
    "from": "0x4a7a11D12805A7570bD1CB65E1Ca1396a0B1aF6F",
    "contractAddress": "0x569FBdE83c90FBe7136806f94467A43C17F88913",
    "transactionIndex": 0,
    "gasUsed": "629723",
    "logsBloom": "0x
    "blockHash": "0xb7ed4eda45c132e53d62dac1baf90b49960e6753856322e55b7f4d4d8c6ec181",
    "transactionHash": "0x9b54e632c00be2225fadd3aea7f391d377d2be4c275f44aa38023fc2bcc052e7",
    "logs": [],
    "blockNumber": 28115298,
    "cumulativeGasUsed": "629723",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xb0abCA446cd5D1A3b56A7B776C801501eC0e9019"
  ],
  "solcInputHash": "14ebb96cd28696ce94a006a33973ed49",
  "metadata": "{\"compiler\":{\"version\":\"0.7.3+commit.9bfce1f6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IACLRegistry\",\"name\":\"_aclRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_name\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_version\",\"type\":\"bytes32\"}],\"name\":\"ContractAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"ContractDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_name\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_version\",\"type\":\"bytes32\"}],\"name\":\"ContractUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"aclRegistry\",\"outputs\":[{\"internalType\":\"contract IACLRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_name\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_version\",\"type\":\"bytes32\"}],\"name\":\"addContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contractNames\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"contracts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"version\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_name\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_contractIndex\",\"type\":\"uint256\"}],\"name\":\"deleteContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"getContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractNames\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_name\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_newAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_version\",\"type\":\"bytes32\"}],\"name\":\"updateContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This Contract holds reference to all our contracts. Every contract A that needs to interact with another contract B calls this contract to ask for the address of B. This allows us to update addresses in one central point and reduces constructing and management overhead.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/utils/ContractRegistry.sol\":\"ContractRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/core/interfaces/IACLRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IACLRegistry {\\n  /**\\n   * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n   *\\n   * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n   * {RoleAdminChanged} not being emitted signaling this.\\n   *\\n   * _Available since v3.1._\\n   */\\n  event RoleAdminChanged(\\n    bytes32 indexed role,\\n    bytes32 indexed previousAdminRole,\\n    bytes32 indexed newAdminRole\\n  );\\n\\n  /**\\n   * @dev Emitted when `account` is granted `role`.\\n   *\\n   * `sender` is the account that originated the contract call, an admin role\\n   * bearer except when using {AccessControl-_setupRole}.\\n   */\\n  event RoleGranted(\\n    bytes32 indexed role,\\n    address indexed account,\\n    address indexed sender\\n  );\\n\\n  /**\\n   * @dev Emitted when `account` is revoked `role`.\\n   *\\n   * `sender` is the account that originated the contract call:\\n   *   - if using `revokeRole`, it is the admin role bearer\\n   *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n   */\\n  event RoleRevoked(\\n    bytes32 indexed role,\\n    address indexed account,\\n    address indexed sender\\n  );\\n\\n  /**\\n   * @dev Returns `true` if `account` has been granted `role`.\\n   */\\n  function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n  /**\\n   * @dev Returns `true` if `account` has been granted `permission`.\\n   */\\n  function hasPermission(bytes32 permission, address account)\\n    external\\n    view\\n    returns (bool);\\n\\n  /**\\n   * @dev Returns the admin role that controls `role`. See {grantRole} and\\n   * {revokeRole}.\\n   *\\n   * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n   */\\n  function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n  /**\\n   * @dev Grants `role` to `account`.\\n   *\\n   * If `account` had not been already granted `role`, emits a {RoleGranted}\\n   * event.\\n   *\\n   * Requirements:\\n   *\\n   * - the caller must have ``role``'s admin role.\\n   */\\n  function grantRole(bytes32 role, address account) external;\\n\\n  /**\\n   * @dev Revokes `role` from `account`.\\n   *\\n   * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n   *\\n   * Requirements:\\n   *\\n   * - the caller must have ``role``'s admin role.\\n   */\\n  function revokeRole(bytes32 role, address account) external;\\n\\n  /**\\n   * @dev Revokes `role` from the calling account.\\n   *\\n   * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n   * purpose is to provide a mechanism for accounts to lose their privileges\\n   * if they are compromised (such as when a trusted device is misplaced).\\n   *\\n   * If the calling account had been granted `role`, emits a {RoleRevoked}\\n   * event.\\n   *\\n   * Requirements:\\n   *\\n   * - the caller must be `account`.\\n   */\\n  function renounceRole(bytes32 role, address account) external;\\n\\n  function setRoleAdmin(bytes32 role, bytes32 adminRole) external;\\n\\n  function grantPermission(bytes32 permission, address account) external;\\n\\n  function revokePermission(bytes32 permission) external;\\n\\n  function requireApprovedContractOrEOA(address account) external view;\\n\\n  function requireRole(bytes32 role, address account) external view;\\n\\n  function requirePermission(bytes32 permission, address account) external view;\\n\\n  function isRoleAdmin(bytes32 role, address account) external view;\\n}\\n\",\"keccak256\":\"0x0cf6feefb51e54d54d0bcc253c85939eb8da36cd466dcb5c73ed7109bf402725\",\"license\":\"MIT\"},\"contracts/core/interfaces/IContractRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev External interface of ContractRegistry.\\n */\\ninterface IContractRegistry {\\n  function getContract(bytes32 _name) external view returns (address);\\n}\\n\",\"keccak256\":\"0x2850445cc34905678394bbb7cc7884fd4db4c46548abddda8aa7375560fb6f61\",\"license\":\"MIT\"},\"contracts/core/utils/ContractRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../interfaces/IACLRegistry.sol\\\";\\nimport \\\"../interfaces/IContractRegistry.sol\\\";\\n\\n/**\\n * @dev This Contract holds reference to all our contracts. Every contract A that needs to interact with another contract B calls this contract\\n * to ask for the address of B.\\n * This allows us to update addresses in one central point and reduces constructing and management overhead.\\n */\\ncontract ContractRegistry is IContractRegistry {\\n  struct Contract {\\n    address contractAddress;\\n    bytes32 version;\\n  }\\n\\n  /* ========== STATE VARIABLES ========== */\\n\\n  IACLRegistry public aclRegistry;\\n\\n  mapping(bytes32 => Contract) public contracts;\\n  bytes32[] public contractNames;\\n\\n  /* ========== EVENTS ========== */\\n\\n  event ContractAdded(bytes32 _name, address _address, bytes32 _version);\\n  event ContractUpdated(bytes32 _name, address _address, bytes32 _version);\\n  event ContractDeleted(bytes32 _name);\\n\\n  /* ========== CONSTRUCTOR ========== */\\n\\n  constructor(IACLRegistry _aclRegistry) {\\n    aclRegistry = _aclRegistry;\\n    contracts[keccak256(\\\"ACLRegistry\\\")] = Contract({\\n      contractAddress: address(_aclRegistry),\\n      version: keccak256(\\\"1\\\")\\n    });\\n    contractNames.push(keccak256(\\\"ACLRegistry\\\"));\\n  }\\n\\n  /* ========== VIEW FUNCTIONS ========== */\\n\\n  function getContractNames() external view returns (bytes32[] memory) {\\n    return contractNames;\\n  }\\n\\n  function getContract(bytes32 _name) external view override returns (address) {\\n    return contracts[_name].contractAddress;\\n  }\\n\\n  /* ========== MUTATIVE FUNCTIONS ========== */\\n\\n  function addContract(\\n    bytes32 _name,\\n    address _address,\\n    bytes32 _version\\n  ) external {\\n    aclRegistry.requireRole(keccak256(\\\"DAO\\\"), msg.sender);\\n    require(\\n      contracts[_name].contractAddress == address(0),\\n      \\\"contract already exists\\\"\\n    );\\n    contracts[_name] = Contract({contractAddress: _address, version: _version});\\n    contractNames.push(_name);\\n    emit ContractAdded(_name, _address, _version);\\n  }\\n\\n  function updateContract(\\n    bytes32 _name,\\n    address _newAddress,\\n    bytes32 _version\\n  ) external {\\n    aclRegistry.requireRole(keccak256(\\\"DAO\\\"), msg.sender);\\n    require(\\n      contracts[_name].contractAddress != address(0),\\n      \\\"contract doesnt exist\\\"\\n    );\\n    contracts[_name] = Contract({\\n      contractAddress: _newAddress,\\n      version: _version\\n    });\\n    emit ContractUpdated(_name, _newAddress, _version);\\n  }\\n\\n  function deleteContract(bytes32 _name, uint256 _contractIndex) external {\\n    aclRegistry.requireRole(keccak256(\\\"DAO\\\"), msg.sender);\\n    require(\\n      contracts[_name].contractAddress != address(0),\\n      \\\"contract doesnt exist\\\"\\n    );\\n    require(\\n      contractNames[_contractIndex] == _name,\\n      \\\"this is not the contract you are looking for\\\"\\n    );\\n    delete contracts[_name];\\n    delete contractNames[_contractIndex];\\n    emit ContractDeleted(_name);\\n  }\\n}\\n\",\"keccak256\":\"0x815e4e8cee3e9e5051a9491b5c7f6883ad676f254c3ae1835d96aa7e896f50d1\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161099e38038061099e8339818101604052602081101561003357600080fd5b5051600080546001600160a01b039283166001600160a01b031991821681178355604080518082019091529081527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660208281019182527f15fa0125f52e5705da1148bfcf00974823c4381bee4314203ede255f9477b73e80865260019182905292517f7361e8ccf7a27163a98e050d746a5c73d23616ea599eb9af9e4a86e96a9dfc0880549190971694169390931790945592517f7361e8ccf7a27163a98e050d746a5c73d23616ea599eb9af9e4a86e96a9dfc09556002805491820181559091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0155610856806101486000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063d5a161091161005b578063d5a161091461016c578063e16c7d981461018f578063ec56a373146101ac578063fe3c458e146101ec57610088565b806334d40a8f1461008d57806337df1e9d146100c15780633ca6bb92146101195780639160380e14610148575b600080fd5b6100bf600480360360608110156100a357600080fd5b508035906001600160a01b03602082013516906040013561021e565b005b6100c96103ab565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156101055781810151838201526020016100ed565b505050509050019250505060405180910390f35b6101366004803603602081101561012f57600080fd5b5035610403565b60408051918252519081900360200190f35b610150610421565b604080516001600160a01b039092168252519081900360200190f35b6100bf6004803603604081101561018257600080fd5b5080359060200135610430565b610150600480360360208110156101a557600080fd5b50356105f9565b6101c9600480360360208110156101c257600080fd5b5035610614565b604080516001600160a01b03909316835260208301919091528051918290030190f35b6100bf6004803603606081101561020257600080fd5b508035906001600160a01b036020820135169060400135610639565b600080546040805163d09a20c560e01b81527fd0a4ad96d49edb1c33461cebc6fb2609190f32c904e3c3f5877edb4488dee91e600482015233602482015290516001600160a01b039092169263d09a20c592604480840193829003018186803b15801561028a57600080fd5b505afa15801561029e573d6000803e3d6000fd5b5050506000848152600160205260409020546001600160a01b03161515905061030e576040805162461bcd60e51b815260206004820152601560248201527f636f6e747261637420646f65736e742065786973740000000000000000000000604482015290519081900360640190fd5b6040805180820182526001600160a01b03848116808352602080840186815260008981526001808452908790209551865473ffffffffffffffffffffffffffffffffffffffff1916951694909417855551939092019290925582518681529081019190915280820183905290517fb69768dcac5758cdbac4aa0c3113c765359474832ce059d53f5e799e0922db6f916060908290030190a1505050565b606060028054806020026020016040519081016040528092919081815260200182805480156103f957602002820191906000526020600020905b8154815260200190600101908083116103e5575b5050505050905090565b6002818154811061041057fe5b600091825260209091200154905081565b6000546001600160a01b031681565b600080546040805163d09a20c560e01b81527fd0a4ad96d49edb1c33461cebc6fb2609190f32c904e3c3f5877edb4488dee91e600482015233602482015290516001600160a01b039092169263d09a20c592604480840193829003018186803b15801561049c57600080fd5b505afa1580156104b0573d6000803e3d6000fd5b5050506000838152600160205260409020546001600160a01b031615159050610520576040805162461bcd60e51b815260206004820152601560248201527f636f6e747261637420646f65736e742065786973740000000000000000000000604482015290519081900360640190fd5b816002828154811061052e57fe5b9060005260206000200154146105755760405162461bcd60e51b815260040180806020018281038252602c8152602001806107f5602c913960400191505060405180910390fd5b60008281526001602081905260408220805473ffffffffffffffffffffffffffffffffffffffff19168155015560028054829081106105b057fe5b90600052602060002001600090557ffcb9b89d9fdad6183290641024092e3a078212303eda7df8d64648902cd7600b826040518082815260200191505060405180910390a15050565b6000908152600160205260409020546001600160a01b031690565b600160208190526000918252604090912080549101546001600160a01b039091169082565b600080546040805163d09a20c560e01b81527fd0a4ad96d49edb1c33461cebc6fb2609190f32c904e3c3f5877edb4488dee91e600482015233602482015290516001600160a01b039092169263d09a20c592604480840193829003018186803b1580156106a557600080fd5b505afa1580156106b9573d6000803e3d6000fd5b5050506000848152600160205260409020546001600160a01b0316159050610728576040805162461bcd60e51b815260206004820152601760248201527f636f6e747261637420616c726561647920657869737473000000000000000000604482015290519081900360640190fd5b6040805180820182526001600160a01b038481168083526020808401868152600089815260018084528782209651875473ffffffffffffffffffffffffffffffffffffffff191696169590951786559051948401949094556002805493840181559093527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90910186905582518681529182015280820183905290517f41f0868602f01af184ca25746dd5d2fff355679ad1861385cf8bd3f6d3da8a57916060908290030190a150505056fe74686973206973206e6f742074686520636f6e747261637420796f7520617265206c6f6f6b696e6720666f72a26469706673582212201a09f9b82bb76a10a13c3bdb58da6d82fda040884382e03a6426f9e004a9b81d64736f6c63430007030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063d5a161091161005b578063d5a161091461016c578063e16c7d981461018f578063ec56a373146101ac578063fe3c458e146101ec57610088565b806334d40a8f1461008d57806337df1e9d146100c15780633ca6bb92146101195780639160380e14610148575b600080fd5b6100bf600480360360608110156100a357600080fd5b508035906001600160a01b03602082013516906040013561021e565b005b6100c96103ab565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156101055781810151838201526020016100ed565b505050509050019250505060405180910390f35b6101366004803603602081101561012f57600080fd5b5035610403565b60408051918252519081900360200190f35b610150610421565b604080516001600160a01b039092168252519081900360200190f35b6100bf6004803603604081101561018257600080fd5b5080359060200135610430565b610150600480360360208110156101a557600080fd5b50356105f9565b6101c9600480360360208110156101c257600080fd5b5035610614565b604080516001600160a01b03909316835260208301919091528051918290030190f35b6100bf6004803603606081101561020257600080fd5b508035906001600160a01b036020820135169060400135610639565b600080546040805163d09a20c560e01b81527fd0a4ad96d49edb1c33461cebc6fb2609190f32c904e3c3f5877edb4488dee91e600482015233602482015290516001600160a01b039092169263d09a20c592604480840193829003018186803b15801561028a57600080fd5b505afa15801561029e573d6000803e3d6000fd5b5050506000848152600160205260409020546001600160a01b03161515905061030e576040805162461bcd60e51b815260206004820152601560248201527f636f6e747261637420646f65736e742065786973740000000000000000000000604482015290519081900360640190fd5b6040805180820182526001600160a01b03848116808352602080840186815260008981526001808452908790209551865473ffffffffffffffffffffffffffffffffffffffff1916951694909417855551939092019290925582518681529081019190915280820183905290517fb69768dcac5758cdbac4aa0c3113c765359474832ce059d53f5e799e0922db6f916060908290030190a1505050565b606060028054806020026020016040519081016040528092919081815260200182805480156103f957602002820191906000526020600020905b8154815260200190600101908083116103e5575b5050505050905090565b6002818154811061041057fe5b600091825260209091200154905081565b6000546001600160a01b031681565b600080546040805163d09a20c560e01b81527fd0a4ad96d49edb1c33461cebc6fb2609190f32c904e3c3f5877edb4488dee91e600482015233602482015290516001600160a01b039092169263d09a20c592604480840193829003018186803b15801561049c57600080fd5b505afa1580156104b0573d6000803e3d6000fd5b5050506000838152600160205260409020546001600160a01b031615159050610520576040805162461bcd60e51b815260206004820152601560248201527f636f6e747261637420646f65736e742065786973740000000000000000000000604482015290519081900360640190fd5b816002828154811061052e57fe5b9060005260206000200154146105755760405162461bcd60e51b815260040180806020018281038252602c8152602001806107f5602c913960400191505060405180910390fd5b60008281526001602081905260408220805473ffffffffffffffffffffffffffffffffffffffff19168155015560028054829081106105b057fe5b90600052602060002001600090557ffcb9b89d9fdad6183290641024092e3a078212303eda7df8d64648902cd7600b826040518082815260200191505060405180910390a15050565b6000908152600160205260409020546001600160a01b031690565b600160208190526000918252604090912080549101546001600160a01b039091169082565b600080546040805163d09a20c560e01b81527fd0a4ad96d49edb1c33461cebc6fb2609190f32c904e3c3f5877edb4488dee91e600482015233602482015290516001600160a01b039092169263d09a20c592604480840193829003018186803b1580156106a557600080fd5b505afa1580156106b9573d6000803e3d6000fd5b5050506000848152600160205260409020546001600160a01b0316159050610728576040805162461bcd60e51b815260206004820152601760248201527f636f6e747261637420616c726561647920657869737473000000000000000000604482015290519081900360640190fd5b6040805180820182526001600160a01b038481168083526020808401868152600089815260018084528782209651875473ffffffffffffffffffffffffffffffffffffffff191696169590951786559051948401949094556002805493840181559093527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90910186905582518681529182015280820183905290517f41f0868602f01af184ca25746dd5d2fff355679ad1861385cf8bd3f6d3da8a57916060908290030190a150505056fe74686973206973206e6f742074686520636f6e747261637420796f7520617265206c6f6f6b696e6720666f72a26469706673582212201a09f9b82bb76a10a13c3bdb58da6d82fda040884382e03a6426f9e004a9b81d64736f6c63430007030033",
  "devdoc": {
    "details": "This Contract holds reference to all our contracts. Every contract A that needs to interact with another contract B calls this contract to ask for the address of B. This allows us to update addresses in one central point and reduces constructing and management overhead.",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 598,
        "contract": "contracts/core/utils/ContractRegistry.sol:ContractRegistry",
        "label": "aclRegistry",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IACLRegistry)127"
      },
      {
        "astId": 602,
        "contract": "contracts/core/utils/ContractRegistry.sol:ContractRegistry",
        "label": "contracts",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_struct(Contract)596_storage)"
      },
      {
        "astId": 605,
        "contract": "contracts/core/utils/ContractRegistry.sol:ContractRegistry",
        "label": "contractNames",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_bytes32)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IACLRegistry)127": {
        "encoding": "inplace",
        "label": "contract IACLRegistry",
        "numberOfBytes": "20"
      },
      "t_mapping(t_bytes32,t_struct(Contract)596_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct ContractRegistry.Contract)",
        "numberOfBytes": "32",
        "value": "t_struct(Contract)596_storage"
      },
      "t_struct(Contract)596_storage": {
        "encoding": "inplace",
        "label": "struct ContractRegistry.Contract",
        "members": [
          {
            "astId": 593,
            "contract": "contracts/core/utils/ContractRegistry.sol:ContractRegistry",
            "label": "contractAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 595,
            "contract": "contracts/core/utils/ContractRegistry.sol:ContractRegistry",
            "label": "version",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "64"
      }
    }
  }
}