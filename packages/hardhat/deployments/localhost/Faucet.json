{
  "address": "0x5fc748f1FEb28d7b76fa1c6B07D8ba2d5535177c",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "uniswap_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "curveAddressProvider_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "curveDepositZap_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "curveAddressProvider",
      "outputs": [
        {
          "internalType": "contract CurveAddressProvider",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "curveDepositZap",
      "outputs": [
        {
          "internalType": "contract CurveDepositZap",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "curveRegistry",
      "outputs": [
        {
          "internalType": "contract CurveRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dai",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lpToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "sendCurveLPTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "sendThreeCrv",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "sendTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "threeCrv",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "triPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswap",
      "outputs": [
        {
          "internalType": "contract Uniswap",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x6428415e0abbcef727bffdc3093352e85b4940ac1843e45b19cbe5037a3a6e0c",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5fc748f1FEb28d7b76fa1c6B07D8ba2d5535177c",
    "transactionIndex": 0,
    "gasUsed": "1022501",
    "logsBloom": "0x
    "blockHash": "0x75464c45bff22d64809a0ad16fe9ee943dfe7d75abf9bf14fe57a2be4b5fb096",
    "transactionHash": "0x6428415e0abbcef727bffdc3093352e85b4940ac1843e45b19cbe5037a3a6e0c",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 13739716,
        "transactionHash": "0x6428415e0abbcef727bffdc3093352e85b4940ac1843e45b19cbe5037a3a6e0c",
        "address": "0x6B175474E89094C44Da98b954EedeAC495271d0F",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x0000000000000000000000005fc748f1feb28d7b76fa1c6b07d8ba2d5535177c",
          "0x000000000000000000000000a79828df1850e8a3a3064576f380d90aecdd3359"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 0,
        "blockHash": "0x75464c45bff22d64809a0ad16fe9ee943dfe7d75abf9bf14fe57a2be4b5fb096"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 13739716,
        "transactionHash": "0x6428415e0abbcef727bffdc3093352e85b4940ac1843e45b19cbe5037a3a6e0c",
        "address": "0x6B175474E89094C44Da98b954EedeAC495271d0F",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x0000000000000000000000005fc748f1feb28d7b76fa1c6b07d8ba2d5535177c",
          "0x000000000000000000000000bebc44782c7db0a1a60cb6fe97d0b483032ff1c7"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 1,
        "blockHash": "0x75464c45bff22d64809a0ad16fe9ee943dfe7d75abf9bf14fe57a2be4b5fb096"
      }
    ],
    "blockNumber": 13739716,
    "cumulativeGasUsed": "1022501",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D",
    "0x0000000022D53366457F9d5E68Ec105046FC4383",
    "0xA79828DF1850E8a3A3064576f380D90aECDD3359"
  ],
  "solcInputHash": "0e2d243efd06c5832267e40ce916613e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"uniswap_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"curveAddressProvider_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"curveDepositZap_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"curveAddressProvider\",\"outputs\":[{\"internalType\":\"contract CurveAddressProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curveDepositZap\",\"outputs\":[{\"internalType\":\"contract CurveDepositZap\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curveRegistry\",\"outputs\":[{\"internalType\":\"contract CurveRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dai\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sendCurveLPTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sendThreeCrv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sendTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"threeCrv\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"triPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswap\",\"outputs\":[{\"internalType\":\"contract Uniswap\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test_helpers/Faucet.sol\":\"Faucet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xc1452b054778f1926419196ef12ae200758a4ee728df69ae1cd13e5c16ca7df7\",\"license\":\"MIT\"},\"contracts/test_helpers/Faucet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface Uniswap {\\n  function swapExactETHForTokens(\\n    uint256 amountOutMin,\\n    address[] calldata path,\\n    address to,\\n    uint256 deadline\\n  ) external payable returns (uint256[] memory amounts);\\n\\n  function WETH() external pure returns (address);\\n}\\n\\ninterface CurveDepositZap {\\n  function add_liquidity(\\n    address pool,\\n    uint256[4] calldata amounts,\\n    uint256 min_mint_amounts,\\n    address receiver\\n  ) external returns (uint256);\\n}\\n\\ninterface TriPool {\\n  function add_liquidity(uint256[3] calldata amounts, uint256 min_mint_amounts) external;\\n}\\n\\ninterface CurveAddressProvider {\\n  function get_registry() external view returns (address);\\n}\\n\\ninterface CurveRegistry {\\n  function get_pool_from_lp_token(address lp_token) external view returns (address);\\n}\\n\\ncontract Faucet {\\n  Uniswap public uniswap;\\n  CurveDepositZap public curveDepositZap;\\n  CurveAddressProvider public curveAddressProvider;\\n  CurveRegistry public curveRegistry;\\n  address public triPool = 0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7;\\n  IERC20 public dai = IERC20(0x6B175474E89094C44Da98b954EedeAC495271d0F);\\n  IERC20 public threeCrv = IERC20(0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490);\\n\\n  constructor(\\n    address uniswap_,\\n    address curveAddressProvider_,\\n    address curveDepositZap_\\n  ) {\\n    uniswap = Uniswap(uniswap_);\\n    curveDepositZap = CurveDepositZap(curveDepositZap_);\\n    curveAddressProvider = CurveAddressProvider(curveAddressProvider_);\\n    curveRegistry = CurveRegistry(curveAddressProvider.get_registry());\\n    dai.approve(address(curveDepositZap), type(uint256).max);\\n    dai.approve(address(triPool), type(uint256).max);\\n  }\\n\\n  function sendTokens(\\n    address token,\\n    uint256 amount,\\n    address recipient\\n  ) public {\\n    address[] memory path = new address[](2);\\n    path[0] = uniswap.WETH();\\n    path[1] = token;\\n    uniswap.swapExactETHForTokens{value: amount * 1 ether}(0, path, recipient, block.timestamp);\\n  }\\n\\n  function sendCurveLPTokens(\\n    address lpToken,\\n    uint256 amount,\\n    address recipient\\n  ) public {\\n    address[] memory path = new address[](2);\\n    path[0] = uniswap.WETH();\\n    path[1] = address(dai);\\n    uint256 daiAmount = uniswap.swapExactETHForTokens{value: amount * 1 ether}(0, path, address(this), block.timestamp)[\\n      1\\n    ];\\n    address curvePool = curveRegistry.get_pool_from_lp_token(lpToken);\\n    curveDepositZap.add_liquidity(curvePool, [0, daiAmount, 0, 0], 0, recipient);\\n  }\\n\\n  function sendThreeCrv(uint256 amount, address recipient) public {\\n    address[] memory path = new address[](2);\\n    path[0] = uniswap.WETH();\\n    path[1] = address(dai);\\n    uint256 daiAmount = uniswap.swapExactETHForTokens{value: amount * 1 ether}(0, path, address(this), block.timestamp)[\\n      1\\n    ];\\n    TriPool(triPool).add_liquidity([daiAmount, 0, 0], 0);\\n    threeCrv.transfer(recipient, threeCrv.balanceOf(address(this)));\\n  }\\n}\\n\",\"keccak256\":\"0xfd430e4f2efc86cff32a37b7976434a04cc0d1b5f08a8bf864022f332844edc2\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052600480546001600160a01b031990811673bebc44782c7db0a1a60cb6fe97d0b483032ff1c717909155600580548216736b175474e89094c44da98b954eedeac495271d0f17905560068054909116736c3f90f043a72fa612cbac8115ee7e52bde6e4901790553480156200007757600080fd5b50604051620010d5380380620010d58339810160408190526200009a91620002ce565b600080546001600160a01b038086166001600160a01b0319928316179092556001805484841690831617905560028054858416921691909117908190556040805163a262904b60e01b81529051919092169163a262904b916004808301926020929190829003018186803b1580156200011257600080fd5b505afa15801562000127573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200014d9190620002aa565b600380546001600160a01b0319166001600160a01b0392831617905560055460015460405163095ea7b360e01b81529183169263095ea7b3926200019c92909116906000199060040162000339565b602060405180830381600087803b158015620001b757600080fd5b505af1158015620001cc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001f2919062000317565b506005546004805460405163095ea7b360e01b81526001600160a01b039384169363095ea7b3936200022d9390911691600019910162000339565b602060405180830381600087803b1580156200024857600080fd5b505af11580156200025d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000283919062000317565b5050505062000352565b80516001600160a01b0381168114620002a557600080fd5b919050565b600060208284031215620002bc578081fd5b620002c7826200028d565b9392505050565b600080600060608486031215620002e3578182fd5b620002ee846200028d565b9250620002fe602085016200028d565b91506200030e604085016200028d565b90509250925092565b60006020828403121562000329578081fd5b81518015158114620002c7578182fd5b6001600160a01b03929092168252602082015260400190565b610d7380620003626000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c80632da9a694116100765780634217e2871161005b5780634217e287146101295780634f9209c31461013c578063f4b9fa7514610144576100be565b80632da9a694146101195780633d6e738814610121576100be565b80632681f7e4116100a75780632681f7e4146100f657806327c24a5d146100fe5780632c499ae614610106576100be565b806307a80726146100c35780631ac460ca146100d8575b600080fd5b6100d66100d1366004610a60565b61014c565b005b6100e0610494565b6040516100ed9190610bc2565b60405180910390f35b6100e06104a3565b6100e06104b2565b6100d6610114366004610b93565b6104c1565b6100e061084e565b6100e061085d565b6100d6610137366004610a60565b61086c565b6100e0610a1f565b6100e0610a2e565b60408051600280825260608201835260009260208301908036833701905050905060008054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156101b957600080fd5b505afa1580156101cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f19190610a3d565b8160008151811061021257634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201015260055482519116908290600190811061025157634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201015260008054909116637ff36ab561028586670de0b6b3a7640000610ce4565b60008530426040518663ffffffff1660e01b81526004016102a99493929190610c7b565b6000604051808303818588803b1580156102c257600080fd5b505af11580156102d6573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f191682016040526102ff9190810190610aa1565b60018151811061031f57634e487b7160e01b600052603260045260246000fd5b60209081029190910101516003546040517fbdf475c30000000000000000000000000000000000000000000000000000000081529192506000916001600160a01b039091169063bdf475c390610379908990600401610bc2565b60206040518083038186803b15801561039157600080fd5b505afa1580156103a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c99190610a3d565b600154604080516080810182526000808252602082018790528183018190526060820181905291517fd0b951e80000000000000000000000000000000000000000000000000000000081529394506001600160a01b039092169263d0b951e8926104399286928a90600401610bd6565b602060405180830381600087803b15801561045357600080fd5b505af1158015610467573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048b9190610b7b565b50505050505050565b6001546001600160a01b031681565b6000546001600160a01b031681565b6003546001600160a01b031681565b60408051600280825260608201835260009260208301908036833701905050905060008054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b15801561052e57600080fd5b505afa158015610542573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105669190610a3d565b8160008151811061058757634e487b7160e01b600052603260045260246000fd5b6001600160a01b0392831660209182029290920101526005548251911690829060019081106105c657634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201015260008054909116637ff36ab56105fa86670de0b6b3a7640000610ce4565b60008530426040518663ffffffff1660e01b815260040161061e9493929190610c7b565b6000604051808303818588803b15801561063757600080fd5b505af115801561064b573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f191682016040526106749190810190610aa1565b60018151811061069457634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516004805460408051606081018252848152600095810186905280820186905290517f4515cef30000000000000000000000000000000000000000000000000000000081529395506001600160a01b0390911693634515cef3936107039301610c43565b600060405180830381600087803b15801561071d57600080fd5b505af1158015610731573d6000803e3d6000fd5b50506006546040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b03909116925063a9059cbb9150859083906370a0823190610788903090600401610bc2565b60206040518083038186803b1580156107a057600080fd5b505afa1580156107b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d89190610b7b565b6040518363ffffffff1660e01b81526004016107f5929190610c2a565b602060405180830381600087803b15801561080f57600080fd5b505af1158015610823573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108479190610b5b565b5050505050565b6006546001600160a01b031681565b6002546001600160a01b031681565b60408051600280825260608201835260009260208301908036833701905050905060008054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156108d957600080fd5b505afa1580156108ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109119190610a3d565b8160008151811061093257634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050838160018151811061097457634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201015260005416637ff36ab56109a585670de0b6b3a7640000610ce4565b60008486426040518663ffffffff1660e01b81526004016109c99493929190610c7b565b6000604051808303818588803b1580156109e257600080fd5b505af11580156109f6573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f191682016040526108479190810190610aa1565b6004546001600160a01b031681565b6005546001600160a01b031681565b600060208284031215610a4e578081fd5b8151610a5981610d25565b9392505050565b600080600060608486031215610a74578182fd5b8335610a7f81610d25565b9250602084013591506040840135610a9681610d25565b809150509250925092565b60006020808385031215610ab3578182fd5b825167ffffffffffffffff80821115610aca578384fd5b818501915085601f830112610add578384fd5b815181811115610aef57610aef610d0f565b83810260405185828201018181108582111715610b0e57610b0e610d0f565b604052828152858101935084860182860187018a1015610b2c578788fd5b8795505b83861015610b4e578051855260019590950194938601938601610b30565b5098975050505050505050565b600060208284031215610b6c578081fd5b81518015158114610a59578182fd5b600060208284031215610b8c578081fd5b5051919050565b60008060408385031215610ba5578182fd5b823591506020830135610bb781610d25565b809150509250929050565b6001600160a01b0391909116815260200190565b6001600160a01b03858116825260e082019060208084018760005b6004811015610c0e57815183529183019190830190600101610bf1565b505050508460a084015280841660c08401525095945050505050565b6001600160a01b03929092168252602082015260400190565b60808101818460005b6003811015610c6b578151835260209283019290910190600101610c4c565b5050508260608301529392505050565b600060808201868352602060808185015281875180845260a0860191508289019350845b81811015610cc45784516001600160a01b031683529383019391830191600101610c9f565b50506001600160a01b039690961660408501525050506060015292915050565b6000816000190483118215151615610d0a57634e487b7160e01b81526011600452602481fd5b500290565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610d3a57600080fd5b5056fea264697066735822122074ba2a4d36e5791ce994f01d5905e9300b083e91d1f83c772be4fd99674aa3c264736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100be5760003560e01c80632da9a694116100765780634217e2871161005b5780634217e287146101295780634f9209c31461013c578063f4b9fa7514610144576100be565b80632da9a694146101195780633d6e738814610121576100be565b80632681f7e4116100a75780632681f7e4146100f657806327c24a5d146100fe5780632c499ae614610106576100be565b806307a80726146100c35780631ac460ca146100d8575b600080fd5b6100d66100d1366004610a60565b61014c565b005b6100e0610494565b6040516100ed9190610bc2565b60405180910390f35b6100e06104a3565b6100e06104b2565b6100d6610114366004610b93565b6104c1565b6100e061084e565b6100e061085d565b6100d6610137366004610a60565b61086c565b6100e0610a1f565b6100e0610a2e565b60408051600280825260608201835260009260208301908036833701905050905060008054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156101b957600080fd5b505afa1580156101cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f19190610a3d565b8160008151811061021257634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201015260055482519116908290600190811061025157634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201015260008054909116637ff36ab561028586670de0b6b3a7640000610ce4565b60008530426040518663ffffffff1660e01b81526004016102a99493929190610c7b565b6000604051808303818588803b1580156102c257600080fd5b505af11580156102d6573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f191682016040526102ff9190810190610aa1565b60018151811061031f57634e487b7160e01b600052603260045260246000fd5b60209081029190910101516003546040517fbdf475c30000000000000000000000000000000000000000000000000000000081529192506000916001600160a01b039091169063bdf475c390610379908990600401610bc2565b60206040518083038186803b15801561039157600080fd5b505afa1580156103a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c99190610a3d565b600154604080516080810182526000808252602082018790528183018190526060820181905291517fd0b951e80000000000000000000000000000000000000000000000000000000081529394506001600160a01b039092169263d0b951e8926104399286928a90600401610bd6565b602060405180830381600087803b15801561045357600080fd5b505af1158015610467573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048b9190610b7b565b50505050505050565b6001546001600160a01b031681565b6000546001600160a01b031681565b6003546001600160a01b031681565b60408051600280825260608201835260009260208301908036833701905050905060008054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b15801561052e57600080fd5b505afa158015610542573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105669190610a3d565b8160008151811061058757634e487b7160e01b600052603260045260246000fd5b6001600160a01b0392831660209182029290920101526005548251911690829060019081106105c657634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201015260008054909116637ff36ab56105fa86670de0b6b3a7640000610ce4565b60008530426040518663ffffffff1660e01b815260040161061e9493929190610c7b565b6000604051808303818588803b15801561063757600080fd5b505af115801561064b573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f191682016040526106749190810190610aa1565b60018151811061069457634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516004805460408051606081018252848152600095810186905280820186905290517f4515cef30000000000000000000000000000000000000000000000000000000081529395506001600160a01b0390911693634515cef3936107039301610c43565b600060405180830381600087803b15801561071d57600080fd5b505af1158015610731573d6000803e3d6000fd5b50506006546040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b03909116925063a9059cbb9150859083906370a0823190610788903090600401610bc2565b60206040518083038186803b1580156107a057600080fd5b505afa1580156107b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d89190610b7b565b6040518363ffffffff1660e01b81526004016107f5929190610c2a565b602060405180830381600087803b15801561080f57600080fd5b505af1158015610823573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108479190610b5b565b5050505050565b6006546001600160a01b031681565b6002546001600160a01b031681565b60408051600280825260608201835260009260208301908036833701905050905060008054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156108d957600080fd5b505afa1580156108ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109119190610a3d565b8160008151811061093257634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050838160018151811061097457634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201015260005416637ff36ab56109a585670de0b6b3a7640000610ce4565b60008486426040518663ffffffff1660e01b81526004016109c99493929190610c7b565b6000604051808303818588803b1580156109e257600080fd5b505af11580156109f6573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f191682016040526108479190810190610aa1565b6004546001600160a01b031681565b6005546001600160a01b031681565b600060208284031215610a4e578081fd5b8151610a5981610d25565b9392505050565b600080600060608486031215610a74578182fd5b8335610a7f81610d25565b9250602084013591506040840135610a9681610d25565b809150509250925092565b60006020808385031215610ab3578182fd5b825167ffffffffffffffff80821115610aca578384fd5b818501915085601f830112610add578384fd5b815181811115610aef57610aef610d0f565b83810260405185828201018181108582111715610b0e57610b0e610d0f565b604052828152858101935084860182860187018a1015610b2c578788fd5b8795505b83861015610b4e578051855260019590950194938601938601610b30565b5098975050505050505050565b600060208284031215610b6c578081fd5b81518015158114610a59578182fd5b600060208284031215610b8c578081fd5b5051919050565b60008060408385031215610ba5578182fd5b823591506020830135610bb781610d25565b809150509250929050565b6001600160a01b0391909116815260200190565b6001600160a01b03858116825260e082019060208084018760005b6004811015610c0e57815183529183019190830190600101610bf1565b505050508460a084015280841660c08401525095945050505050565b6001600160a01b03929092168252602082015260400190565b60808101818460005b6003811015610c6b578151835260209283019290910190600101610c4c565b5050508260608301529392505050565b600060808201868352602060808185015281875180845260a0860191508289019350845b81811015610cc45784516001600160a01b031683529383019391830191600101610c9f565b50506001600160a01b039690961660408501525050506060015292915050565b6000816000190483118215151615610d0a57634e487b7160e01b81526011600452602481fd5b500290565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610d3a57600080fd5b5056fea264697066735822122074ba2a4d36e5791ce994f01d5905e9300b083e91d1f83c772be4fd99674aa3c264736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 9058,
        "contract": "contracts/test_helpers/Faucet.sol:Faucet",
        "label": "uniswap",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(Uniswap)9015"
      },
      {
        "astId": 9061,
        "contract": "contracts/test_helpers/Faucet.sol:Faucet",
        "label": "curveDepositZap",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(CurveDepositZap)9031"
      },
      {
        "astId": 9064,
        "contract": "contracts/test_helpers/Faucet.sol:Faucet",
        "label": "curveAddressProvider",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(CurveAddressProvider)9047"
      },
      {
        "astId": 9067,
        "contract": "contracts/test_helpers/Faucet.sol:Faucet",
        "label": "curveRegistry",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(CurveRegistry)9055"
      },
      {
        "astId": 9070,
        "contract": "contracts/test_helpers/Faucet.sol:Faucet",
        "label": "triPool",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 9076,
        "contract": "contracts/test_helpers/Faucet.sol:Faucet",
        "label": "dai",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(IERC20)860"
      },
      {
        "astId": 9082,
        "contract": "contracts/test_helpers/Faucet.sol:Faucet",
        "label": "threeCrv",
        "offset": 0,
        "slot": "6",
        "type": "t_contract(IERC20)860"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(CurveAddressProvider)9047": {
        "encoding": "inplace",
        "label": "contract CurveAddressProvider",
        "numberOfBytes": "20"
      },
      "t_contract(CurveDepositZap)9031": {
        "encoding": "inplace",
        "label": "contract CurveDepositZap",
        "numberOfBytes": "20"
      },
      "t_contract(CurveRegistry)9055": {
        "encoding": "inplace",
        "label": "contract CurveRegistry",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)860": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(Uniswap)9015": {
        "encoding": "inplace",
        "label": "contract Uniswap",
        "numberOfBytes": "20"
      }
    }
  }
}