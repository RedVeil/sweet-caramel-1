{
  "address": "0x5067457698Fd6Fa1C6964e416b3f42713513B3dD",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "contract IRewardsEscrow",
          "name": "_rewardsEscrow",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "name": "RewardAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "name": "RewardPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakingDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakingWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "earned",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardForDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getVoiceCredits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getWithdrawableBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_lengthOfTime",
          "type": "uint256"
        }
      ],
      "name": "increaseLock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "increaseStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastTimeRewardApplicable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastUpdateTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lockedBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "end",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_reward",
          "type": "uint256"
        }
      ],
      "name": "notifyRewardAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "periodFinish",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "recalculateVoiceCredits",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardPerToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardPerTokenStored",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "rewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardsDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardsEscrow",
      "outputs": [
        {
          "internalType": "contract IRewardsEscrow",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_lengthOfTime",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_lengthOfTime",
          "type": "uint256"
        }
      ],
      "name": "stakeFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalLocked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalVoiceCredits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "updatePeriodFinish",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userRewardPerTokenPaid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "voiceCredits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xe11f1d2aa9a05414bbb584182718ac0dc2c9f0032c0c960357e613a4637b2240",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5067457698Fd6Fa1C6964e416b3f42713513B3dD",
    "transactionIndex": 0,
    "gasUsed": "1943846",
    "logsBloom": "0x
    "blockHash": "0x158e519ebc2daa44887334256bb0dd514360e8a0729d883c357a2914f7ab1d53",
    "transactionHash": "0xe11f1d2aa9a05414bbb584182718ac0dc2c9f0032c0c960357e613a4637b2240",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 13739686,
        "transactionHash": "0xe11f1d2aa9a05414bbb584182718ac0dc2c9f0032c0c960357e613a4637b2240",
        "address": "0x5067457698Fd6Fa1C6964e416b3f42713513B3dD",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x158e519ebc2daa44887334256bb0dd514360e8a0729d883c357a2914f7ab1d53"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 13739686,
        "transactionHash": "0xe11f1d2aa9a05414bbb584182718ac0dc2c9f0032c0c960357e613a4637b2240",
        "address": "0xf953b3A269d80e3eB0F2947630Da976B896A8C5b",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x0000000000000000000000005067457698fd6fa1c6964e416b3f42713513b3dd",
          "0x000000000000000000000000720472c8ce72c2a2d711333e064abd3e6bbeadd3"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 1,
        "blockHash": "0x158e519ebc2daa44887334256bb0dd514360e8a0729d883c357a2914f7ab1d53"
      }
    ],
    "blockNumber": 13739686,
    "cumulativeGasUsed": "1943846",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xf953b3A269d80e3eB0F2947630Da976B896A8C5b",
    "0x720472c8ce72c2A2D711333e064ABD3E6BbEAdd3"
  ],
  "solcInputHash": "31fd7e5d3f14650b4d0b908e90e5bd82",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"contract IRewardsEscrow\",\"name\":\"_rewardsEscrow\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakingDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakingWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardForDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getVoiceCredits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getWithdrawableBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lengthOfTime\",\"type\":\"uint256\"}],\"name\":\"increaseLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increaseStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"}],\"name\":\"notifyRewardAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periodFinish\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"recalculateVoiceCredits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsEscrow\",\"outputs\":[{\"internalType\":\"contract IRewardsEscrow\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lengthOfTime\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lengthOfTime\",\"type\":\"uint256\"}],\"name\":\"stakeFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVoiceCredits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"updatePeriodFinish\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewardPerTokenPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"voiceCredits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getVoiceCredits(address)\":{\"details\":\"todo - check if multiplier is needed for calculating square root of smaller balances\",\"params\":{\"_address\":\"address to get voice credits for\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getVoiceCredits(address)\":{\"notice\":\"this returns the current voice credit balance of an address. voice credits decays over time. the amount returned is up to date, whereas the amount stored in `public voiceCredits` is saved only during some checkpoints.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/dao/LockStaking.sol\":\"LockStaking\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa1b27b3f44ff825974e5268e8f63ad3b03add5b464880d860fbb8cae043e17f7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0x6881efb8fa7b41a7a7c2e6e5b31f0f19d0735a6485f2912f8db5802546aeaf16\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x86ebc6cea2b539c2d4a79a4754f7c90c43c45c9aaf0aab32ecffb1565afc5e0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xc1452b054778f1926419196ef12ae200758a4ee728df69ae1cd13e5c16ca7df7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x671741933530f343f023a40e58e61bc09d62494b96c6f3e39e647f315facd519\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9944d1038f27dcebff810d7ba16b3b8058b967173d76874fb72dd7cd84129656\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a >= b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a / b + (a % b == 0 ? 0 : 1);\\n    }\\n}\\n\",\"keccak256\":\"0xe936fc79332de2ca7b1c06a70f81345aa2466958aab00f463e312ca0585e85cf\",\"license\":\"MIT\"},\"contracts/core/dao/LockStaking.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// Docgen-SOLC: 0.8.0\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/utils/math/Math.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/Pausable.sol\\\";\\nimport \\\"../interfaces/IStaking.sol\\\";\\nimport \\\"../interfaces/IRewardsManager.sol\\\";\\nimport \\\"../interfaces/IRewardsEscrow.sol\\\";\\n\\ncontract LockStaking is IStaking, Ownable, ReentrancyGuard, Pausable {\\n  using SafeERC20 for IERC20;\\n\\n  struct LockedBalance {\\n    uint256 balance;\\n    uint256 end;\\n  }\\n\\n  /* ========== STATE VARIABLES ========== */\\n\\n  IERC20 public immutable token;\\n  IRewardsEscrow public rewardsEscrow;\\n\\n  uint256 public periodFinish = 0;\\n  uint256 public rewardRate = 0;\\n  uint256 public rewardsDuration = 7 days;\\n  uint256 public lastUpdateTime;\\n  uint256 public rewardPerTokenStored;\\n  uint256 public totalLocked;\\n  uint256 public totalVoiceCredits;\\n  mapping(address => uint256) public voiceCredits;\\n  mapping(address => uint256) public userRewardPerTokenPaid;\\n  mapping(address => uint256) public rewards;\\n  mapping(address => LockedBalance) public lockedBalances;\\n\\n  /* ========== EVENTS ========== */\\n\\n  event StakingDeposited(address _address, uint256 amount);\\n  event StakingWithdrawn(address _address, uint256 amount);\\n  event RewardPaid(address _address, uint256 reward);\\n  event RewardAdded(uint256 reward);\\n\\n  /* ========== CONSTRUCTOR ========== */\\n\\n  constructor(IERC20 _token, IRewardsEscrow _rewardsEscrow) {\\n    token = _token;\\n    rewardsEscrow = _rewardsEscrow;\\n\\n    _token.safeIncreaseAllowance(address(_rewardsEscrow), type(uint256).max);\\n  }\\n\\n  /* ========== VIEWS ========== */\\n\\n  /**\\n   * @notice this returns the current voice credit balance of an address. voice credits decays over time. the amount returned is up to date, whereas the amount stored in `public voiceCredits` is saved only during some checkpoints.\\n   * @dev todo - check if multiplier is needed for calculating square root of smaller balances\\n   * @param _address address to get voice credits for\\n   */\\n  function getVoiceCredits(address _address) public view override returns (uint256) {\\n    uint256 lockEndTime = lockedBalances[_address].end;\\n    uint256 balance = lockedBalances[_address].balance;\\n    uint256 currentTime = block.timestamp;\\n\\n    if (lockEndTime == 0 || lockEndTime < currentTime || balance == 0) {\\n      return 0;\\n    }\\n\\n    uint256 timeTillEnd = ((lockEndTime - currentTime) / 1 hours) * 1 hours;\\n    return (balance * timeTillEnd) / (4 * 365 days);\\n  }\\n\\n  function getWithdrawableBalance(address _address) public view override returns (uint256) {\\n    uint256 withdrawable = 0;\\n    if (lockedBalances[_address].end <= block.timestamp) {\\n      withdrawable = lockedBalances[_address].balance;\\n    }\\n    return withdrawable;\\n  }\\n\\n  function balanceOf(address _address) external view override returns (uint256) {\\n    return lockedBalances[_address].balance;\\n  }\\n\\n  function lastTimeRewardApplicable() public view returns (uint256) {\\n    return Math.min(block.timestamp, periodFinish);\\n  }\\n\\n  function rewardPerToken() public view returns (uint256) {\\n    if (totalLocked == 0) {\\n      return rewardPerTokenStored;\\n    }\\n    return rewardPerTokenStored + (((lastTimeRewardApplicable() - lastUpdateTime) * rewardRate * 1e18) / totalLocked);\\n  }\\n\\n  function earned(address _account) public view returns (uint256) {\\n    return\\n      (lockedBalances[_account].balance * (rewardPerToken() - userRewardPerTokenPaid[_account])) /\\n      1e18 +\\n      rewards[_account];\\n  }\\n\\n  function getRewardForDuration() external view returns (uint256) {\\n    return rewardRate * rewardsDuration;\\n  }\\n\\n  function totalSupply() external view returns (uint256) {\\n    return totalLocked;\\n  }\\n\\n  /* ========== MUTATIVE FUNCTIONS ========== */\\n\\n  function stake(uint256 _amount, uint256 _lengthOfTime) external override nonReentrant {\\n    _stake(msg.sender, msg.sender, _amount, _lengthOfTime);\\n  }\\n\\n  function stakeFor(\\n    address _account,\\n    uint256 _amount,\\n    uint256 _lengthOfTime\\n  ) external override nonReentrant {\\n    _stake(_account, msg.sender, _amount, _lengthOfTime);\\n  }\\n\\n  function increaseLock(uint256 _lengthOfTime) external {\\n    require(_lengthOfTime >= 7 days, \\\"must lock tokens for at least 1 week\\\");\\n    require(_lengthOfTime <= 365 * 4 days, \\\"must lock tokens for less than/equal to  4 year\\\");\\n    require(lockedBalances[msg.sender].balance > 0, \\\"no lockedBalance exists\\\");\\n    require(lockedBalances[msg.sender].end > block.timestamp, \\\"withdraw balance first\\\");\\n    lockedBalances[msg.sender].end = lockedBalances[msg.sender].end + _lengthOfTime;\\n    recalculateVoiceCredits(msg.sender);\\n  }\\n\\n  function increaseStake(uint256 _amount) external {\\n    require(_amount > 0, \\\"amount must be greater than 0\\\");\\n    require(token.balanceOf(msg.sender) >= _amount, \\\"insufficient balance\\\");\\n    require(lockedBalances[msg.sender].balance > 0, \\\"no lockedBalance exists\\\");\\n    require(lockedBalances[msg.sender].end > block.timestamp, \\\"withdraw balance first\\\");\\n    token.safeTransferFrom(msg.sender, address(this), _amount);\\n    totalLocked = totalLocked + _amount;\\n    lockedBalances[msg.sender].balance = lockedBalances[msg.sender].balance + _amount;\\n    recalculateVoiceCredits(msg.sender);\\n  }\\n\\n  function withdraw(uint256 _amount) public override nonReentrant updateReward(msg.sender) {\\n    require(_amount > 0, \\\"amount must be greater than 0\\\");\\n    require(lockedBalances[msg.sender].balance > 0, \\\"insufficient balance\\\");\\n    require(_amount <= getWithdrawableBalance(msg.sender));\\n\\n    token.safeTransfer(msg.sender, _amount);\\n\\n    totalLocked = totalLocked - _amount;\\n    _clearWithdrawnFromLocked(_amount);\\n    recalculateVoiceCredits(msg.sender);\\n    emit StakingWithdrawn(msg.sender, _amount);\\n  }\\n\\n  function getReward() public nonReentrant updateReward(msg.sender) {\\n    uint256 reward = rewards[msg.sender];\\n    if (reward > 0) {\\n      rewards[msg.sender] = 0;\\n      uint256 payout = reward / uint256(10);\\n      uint256 escrowed = payout * uint256(9);\\n\\n      token.safeTransfer(msg.sender, payout);\\n      rewardsEscrow.lock(msg.sender, escrowed);\\n\\n      emit RewardPaid(msg.sender, payout);\\n    }\\n  }\\n\\n  function exit() external {\\n    withdraw(getWithdrawableBalance(msg.sender));\\n    getReward();\\n  }\\n\\n  /* ========== RESTRICTED FUNCTIONS ========== */\\n\\n  function recalculateVoiceCredits(address _address) public {\\n    uint256 previousVoiceCredits = voiceCredits[_address];\\n    totalVoiceCredits = totalVoiceCredits - previousVoiceCredits;\\n    voiceCredits[_address] = getVoiceCredits(_address);\\n    totalVoiceCredits = totalVoiceCredits + voiceCredits[_address];\\n  }\\n\\n  function _stake(\\n    address _account,\\n    address _tokensFrom,\\n    uint256 _amount,\\n    uint256 _lengthOfTime\\n  ) internal updateReward(_account) {\\n    require(_amount > 0, \\\"amount must be greater than 0\\\");\\n    require(_lengthOfTime >= 12 weeks, \\\"must lock tokens for at least 12 weeks\\\");\\n    require(_lengthOfTime <= 365 * 4 days, \\\"must lock tokens for less than/equal to  4 year\\\");\\n    require(token.balanceOf(_tokensFrom) >= _amount, \\\"insufficient balance\\\");\\n    require(lockedBalances[_account].balance == 0, \\\"withdraw balance first\\\");\\n\\n    token.safeTransferFrom(_tokensFrom, address(this), _amount);\\n\\n    totalLocked = totalLocked + _amount;\\n    _lockTokens(_account, _amount, _lengthOfTime);\\n    recalculateVoiceCredits(_account);\\n    emit StakingDeposited(_account, _amount);\\n  }\\n\\n  function _lockTokens(\\n    address _account,\\n    uint256 _amount,\\n    uint256 _lengthOfTime\\n  ) internal {\\n    uint256 currentTime = block.timestamp;\\n    if (currentTime > lockedBalances[_account].end) {\\n      lockedBalances[_account] = LockedBalance({\\n        balance: lockedBalances[_account].balance + _amount,\\n        end: currentTime + _lengthOfTime\\n      });\\n    } else {\\n      lockedBalances[_account] = LockedBalance({\\n        balance: lockedBalances[_account].balance + _amount,\\n        end: lockedBalances[_account].end + _lengthOfTime\\n      });\\n    }\\n  }\\n\\n  function _clearWithdrawnFromLocked(uint256 _amount) internal {\\n    if (lockedBalances[msg.sender].end <= block.timestamp) {\\n      if (_amount == lockedBalances[msg.sender].balance) {\\n        delete lockedBalances[msg.sender];\\n      } else {\\n        lockedBalances[msg.sender].balance = lockedBalances[msg.sender].balance - _amount;\\n      }\\n    }\\n  }\\n\\n  function notifyRewardAmount(uint256 _reward) external override onlyOwner updateReward(address(0)) {\\n    if (block.timestamp >= periodFinish) {\\n      rewardRate = _reward / rewardsDuration;\\n    } else {\\n      uint256 remaining = periodFinish - block.timestamp;\\n      uint256 leftover = remaining * rewardRate;\\n      rewardRate = (_reward + leftover) / rewardsDuration;\\n    }\\n\\n    // Ensure the provided reward amount is not more than the balance in the contract.\\n    // This keeps the reward rate in the right range, preventing overflows due to\\n    // very high values of rewardRate in the earned and rewardsPerToken functions;\\n    // Reward + leftover must be less than 2^256 / 10^18 to avoid overflow.\\n    uint256 balance = token.balanceOf(address(this));\\n    require(rewardRate <= (balance / rewardsDuration), \\\"Provided reward too high\\\");\\n\\n    lastUpdateTime = block.timestamp;\\n    periodFinish = block.timestamp + rewardsDuration;\\n    emit RewardAdded(_reward);\\n  }\\n\\n  // End rewards emission earlier\\n  function updatePeriodFinish(uint256 _timestamp) external onlyOwner updateReward(address(0)) {\\n    require(_timestamp > block.timestamp, \\\"timestamp cant be in the past\\\");\\n    periodFinish = _timestamp;\\n  }\\n\\n  /* ========== MODIFIERS ========== */\\n\\n  modifier updateReward(address _account) {\\n    rewardPerTokenStored = rewardPerToken();\\n    lastUpdateTime = lastTimeRewardApplicable();\\n    if (_account != address(0)) {\\n      rewards[_account] = earned(_account);\\n      userRewardPerTokenPaid[_account] = rewardPerTokenStored;\\n    }\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x0543e418666d915eed9bc99477e828976ab5043f492ed91eaf68cb35b97f2645\",\"license\":\"MIT\"},\"contracts/core/interfaces/IRewardsEscrow.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IRewardsEscrow {\\n  function lock(address _address, uint256 _amount) external;\\n}\\n\",\"keccak256\":\"0x809501ca26ed07a09aef037d472b6531b79fd1fd2cf3b6e684272615cdac9f0b\",\"license\":\"MIT\"},\"contracts/core/interfaces/IRewardsManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IRewardsManager {}\\n\",\"keccak256\":\"0x5c5b948b930e5bfe43f1097b1e06351c472f54c5ba22063e0c90740efaced983\",\"license\":\"MIT\"},\"contracts/core/interfaces/IStaking.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IStaking {\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  function stake(uint256 amount, uint256 lengthOfTime) external;\\n\\n  function stakeFor(\\n    address account,\\n    uint256 amount,\\n    uint256 lengthOfTime\\n  ) external;\\n\\n  function withdraw(uint256 amount) external;\\n\\n  function getVoiceCredits(address _address) external view returns (uint256);\\n\\n  function getWithdrawableBalance(address _address) external view returns (uint256);\\n\\n  function notifyRewardAmount(uint256 reward) external;\\n}\\n\",\"keccak256\":\"0x1eeec7236e6ba1a53b2b0d2094bdc05295c84ab7f0697b432787da181ca05219\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040526000600355600060045562093a806005553480156200002257600080fd5b50604051620025f4380380620025f48339810160408190526200004591620003ff565b6200005962000053620000bb565b620000bf565b6001805560028054606084901b6001600160601b0319166080526001600160a81b0319166101006001600160a01b038481169190910291909117909155620000b3908316826000196200010f602090811b6200117817901c565b505062000610565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081846001600160a01b031663dd62ed3e30866040518363ffffffff1660e01b81526004016200014292919062000474565b60206040518083038186803b1580156200015b57600080fd5b505afa15801562000170573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200019691906200043d565b620001a29190620005a3565b9050620001ff8463095ea7b360e01b8584604051602401620001c69291906200048e565b60408051808303601f190181529190526020810180516001600160e01b0319939093166001600160e01b03938416179052906200020516565b50505050565b600062000261826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316620002af60201b6200128e179092919060201c565b805190915015620002aa5780806020019051810190620002829190620003dd565b620002aa5760405162461bcd60e51b8152600401620002a19062000559565b60405180910390fd5b505050565b6060620002c08484600085620002ca565b90505b9392505050565b606082471015620002ef5760405162461bcd60e51b8152600401620002a190620004dc565b620002fa8562000399565b620003195760405162461bcd60e51b8152600401620002a19062000522565b600080866001600160a01b0316858760405162000337919062000456565b60006040518083038185875af1925050503d806000811462000376576040519150601f19603f3d011682016040523d82523d6000602084013e6200037b565b606091505b5090925090506200038e8282866200039f565b979650505050505050565b3b151590565b60608315620003b0575081620002c3565b825115620003c15782518084602001fd5b8160405162461bcd60e51b8152600401620002a19190620004a7565b600060208284031215620003ef578081fd5b81518015158114620002c3578182fd5b6000806040838503121562000412578081fd5b82516200041f81620005f7565b60208401519092506200043281620005f7565b809150509250929050565b6000602082840312156200044f578081fd5b5051919050565b600082516200046a818460208701620005c8565b9190910192915050565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b6000602082528251806020840152620004c8816040850160208701620005c8565b601f01601f19169190910160400192915050565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b60008219821115620005c357634e487b7160e01b81526011600452602481fd5b500190565b60005b83811015620005e5578181015183820152602001620005cb565b83811115620001ff5750506000910152565b6001600160a01b03811681146200060d57600080fd5b50565b60805160601c611f946200066060003960008181610802015281816109a801528181610b8401528181610f5501528181611062015281816111560152818161142301526115090152611f946000f3fe608060405234801561001057600080fd5b50600436106102405760003560e01c806370a0823111610145578063cd3daf9d116100bd578063ebe2b12b1161008c578063f215793211610071578063f215793214610435578063f2fde38b1461043d578063fc0c546a1461045057610240565b8063ebe2b12b1461041a578063eedad66b1461042257610240565b8063cd3daf9d146103fa578063df0dd6bb14610402578063df136d651461040a578063e9fad8ee1461041257610240565b806380faa57d116101145780638b876347116100f95780638b876347146103ca5780638da5cb5b146103dd578063c8f33c91146103f257610240565b806380faa57d146103af578063843592d3146103b757610240565b806370a0823114610379578063715018a61461038c5780637b0472f0146103945780637b0a47ee146103a757610240565b806320d43db0116101d85780633d18b912116101a7578063568914121161018c578063568914121461034957806358e9a815146103515780635c975abb1461036457610240565b80633d18b9121461032e578063556f6e6b1461033657610240565b806320d43db0146102ed5780632e1a7d4d14610300578063386a9525146103135780633c6b16ab1461031b57610240565b8063127ad35311610214578063127ad353146102b557806318160ddd146102ca5780631c1f78eb146102d25780631c5a0914146102da57610240565b80628cc26214610245578063034f98e51461026e5780630483a7f6146102815780630700037d146102a2575b600080fd5b6102586102533660046118fa565b610458565b6040516102659190611e97565b60405180910390f35b61025861027c3660046118fa565b6104d7565b61029461028f3660046118fa565b610567565b604051610265929190611ea0565b6102586102b03660046118fa565b610580565b6102c86102c33660046118fa565b610592565b005b6102586105f4565b6102586105fb565b6102c86102e8366004611966565b610612565b6102586102fb3660046118fa565b6106ff565b6102c861030e366004611966565b610711565b61025861088d565b6102c8610329366004611966565b610893565b6102c8610ab0565b6102c8610344366004611966565b610c70565b610258610d30565b6102c861035f366004611914565b610d36565b61036c610d73565b6040516102659190611a3e565b6102586103873660046118fa565b610d7c565b6102c8610d97565b6102c86103a2366004611996565b610de2565b610258610e16565b610258610e1c565b6102586103c53660046118fa565b610e2a565b6102586103d83660046118fa565b610e6b565b6103e5610e7d565b60405161026591906119d3565b610258610e8c565b610258610e92565b610258610ef6565b610258610efc565b6102c8610f02565b610258610f16565b6102c8610430366004611966565b610f1c565b6103e56110d2565b6102c861044b3660046118fa565b6110e6565b6103e5611154565b6001600160a01b0381166000908152600c6020908152604080832054600b909252822054670de0b6b3a76400009061048e610e92565b6104989190611f05565b6001600160a01b0385166000908152600d60205260409020546104bb9190611ee6565b6104c59190611ec6565b6104cf9190611eae565b90505b919050565b6001600160a01b0381166000908152600d60205260408120600181015490544282158061050357508083105b8061050c575081155b1561051d57600093505050506104d2565b6000610e1061052c8386611f05565b6105369190611ec6565b61054290610e10611ee6565b9050630784ce006105538285611ee6565b61055d9190611ec6565b9695505050505050565b600d602052600090815260409020805460019091015482565b600c6020526000908152604090205481565b6001600160a01b0381166000908152600a60205260409020546009546105b9908290611f05565b6009556105c5826104d7565b6001600160a01b0383166000908152600a602052604090208190556009546105ed9190611eae565b6009555050565b6008545b90565b600060055460045461060d9190611ee6565b905090565b62093a8081101561063e5760405162461bcd60e51b815260040161063590611b6d565b60405180910390fd5b630784ce008111156106625760405162461bcd60e51b815260040161063590611d01565b336000908152600d602052604090205461068e5760405162461bcd60e51b815260040161063590611e60565b336000908152600d602052604090206001015442106106bf5760405162461bcd60e51b815260040161063590611d95565b336000908152600d60205260409020600101546106dd908290611eae565b336000818152600d60205260409020600101919091556106fc90610592565b50565b600a6020526000908152604090205481565b600260015414156107345760405162461bcd60e51b815260040161063590611e29565b600260015533610742610e92565b60075561074d610e1c565b6006556001600160a01b038116156107945761076881610458565b6001600160a01b0382166000908152600c6020908152604080832093909355600754600b909152919020555b600082116107b45760405162461bcd60e51b815260040161063590611bca565b336000908152600d60205260409020546107e05760405162461bcd60e51b815260040161063590611c93565b6107e933610e2a565b8211156107f557600080fd5b6108296001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633846112a7565b816008546108379190611f05565b600855610843826112cb565b61084c33610592565b7f31b1dcbb078c03f6346db59ee77d2cd25542dcdc90c03978beea4e90362d5f5f338360405161087d929190611a25565b60405180910390a1505060018055565b60055481565b61089b611344565b6001600160a01b03166108ac610e7d565b6001600160a01b0316146108d25760405162461bcd60e51b815260040161063590611c5e565b60006108dc610e92565b6007556108e7610e1c565b6006556001600160a01b0381161561092e5761090281610458565b6001600160a01b0382166000908152600c6020908152604080832093909355600754600b909152919020555b600354421061094c576005546109449083611ec6565b60045561098e565b60004260035461095c9190611f05565b905060006004548261096e9190611ee6565b60055490915061097e8286611eae565b6109889190611ec6565b60045550505b6040516370a0823160e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a08231906109dd9030906004016119d3565b60206040518083038186803b1580156109f557600080fd5b505afa158015610a09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2d919061197e565b905060055481610a3d9190611ec6565b6004541115610a5e5760405162461bcd60e51b815260040161063590611cca565b426006819055600554610a7091611eae565b6003556040517fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d90610aa3908590611e97565b60405180910390a1505050565b60026001541415610ad35760405162461bcd60e51b815260040161063590611e29565b600260015533610ae1610e92565b600755610aec610e1c565b6006556001600160a01b03811615610b3357610b0781610458565b6001600160a01b0382166000908152600c6020908152604080832093909355600754600b909152919020555b336000908152600c60205260409020548015610c6857336000908152600c60205260408120819055610b66600a83611ec6565b90506000610b75600983611ee6565b9050610bab6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633846112a7565b6002546040517f282d3fdf0000000000000000000000000000000000000000000000000000000081526101009091046001600160a01b03169063282d3fdf90610bfa9033908590600401611a25565b600060405180830381600087803b158015610c1457600080fd5b505af1158015610c28573d6000803e3d6000fd5b505050507fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e04863383604051610c5d929190611a25565b60405180910390a150505b505060018055565b610c78611344565b6001600160a01b0316610c89610e7d565b6001600160a01b031614610caf5760405162461bcd60e51b815260040161063590611c5e565b6000610cb9610e92565b600755610cc4610e1c565b6006556001600160a01b03811615610d0b57610cdf81610458565b6001600160a01b0382166000908152600c6020908152604080832093909355600754600b909152919020555b428211610d2a5760405162461bcd60e51b815260040161063590611ad9565b50600355565b60085481565b60026001541415610d595760405162461bcd60e51b815260040161063590611e29565b6002600155610d6a83338484611348565b50506001805550565b60025460ff1690565b6001600160a01b03166000908152600d602052604090205490565b610d9f611344565b6001600160a01b0316610db0610e7d565b6001600160a01b031614610dd65760405162461bcd60e51b815260040161063590611c5e565b610de06000611596565b565b60026001541415610e055760405162461bcd60e51b815260040161063590611e29565b6002600155610c6833808484611348565b60045481565b600061060d426003546115fe565b6001600160a01b0381166000908152600d6020526040812060010154819042106104cf5750506001600160a01b03166000908152600d602052604090205490565b600b6020526000908152604090205481565b6000546001600160a01b031690565b60065481565b600060085460001415610ea857506007546105f8565b600854600454600654610eb9610e1c565b610ec39190611f05565b610ecd9190611ee6565b610edf90670de0b6b3a7640000611ee6565b610ee99190611ec6565b60075461060d9190611eae565b60095481565b60075481565b610f0e61030e33610e2a565b610de0610ab0565b60035481565b60008111610f3c5760405162461bcd60e51b815260040161063590611bca565b6040516370a0823160e01b815281906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190610f8a9033906004016119d3565b60206040518083038186803b158015610fa257600080fd5b505afa158015610fb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fda919061197e565b1015610ff85760405162461bcd60e51b815260040161063590611c93565b336000908152600d60205260409020546110245760405162461bcd60e51b815260040161063590611e60565b336000908152600d602052604090206001015442106110555760405162461bcd60e51b815260040161063590611d95565b61108a6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084611614565b806008546110989190611eae565b600855336000908152600d60205260409020546110b6908290611eae565b336000818152600d60205260409020919091556106fc90610592565b60025461010090046001600160a01b031681565b6110ee611344565b6001600160a01b03166110ff610e7d565b6001600160a01b0316146111255760405162461bcd60e51b815260040161063590611c5e565b6001600160a01b03811661114b5760405162461bcd60e51b815260040161063590611a7c565b6106fc81611596565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081846001600160a01b031663dd62ed3e30866040518363ffffffff1660e01b81526004016111a99291906119e7565b60206040518083038186803b1580156111c157600080fd5b505afa1580156111d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f9919061197e565b6112039190611eae565b90506112888463095ea7b360e01b8584604051602401611224929190611a25565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611635565b50505050565b606061129d84846000856116c4565b90505b9392505050565b6112c68363a9059cbb60e01b8484604051602401611224929190611a25565b505050565b336000908152600d602052604090206001015442106106fc57336000908152600d602052604090205481141561131657336000908152600d60205260408120818155600101556106fc565b336000908152600d6020526040902054611331908290611f05565b336000908152600d602052604090205550565b3390565b83611351610e92565b60075561135c610e1c565b6006556001600160a01b038116156113a35761137781610458565b6001600160a01b0382166000908152600c6020908152604080832093909355600754600b909152919020555b600083116113c35760405162461bcd60e51b815260040161063590611bca565b626ebe008210156113e65760405162461bcd60e51b815260040161063590611c01565b630784ce0082111561140a5760405162461bcd60e51b815260040161063590611d01565b6040516370a0823160e01b815283906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a08231906114589088906004016119d3565b60206040518083038186803b15801561147057600080fd5b505afa158015611484573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a8919061197e565b10156114c65760405162461bcd60e51b815260040161063590611c93565b6001600160a01b0385166000908152600d6020526040902054156114fc5760405162461bcd60e51b815260040161063590611d95565b6115316001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016853086611614565b8260085461153f9190611eae565b60085561154d858484611784565b61155685610592565b7f6340a0e6b8ea35da618479a712fc50894736e440f8adf9c52f61e62b52b1d97a8584604051611587929190611a25565b60405180910390a15050505050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081831061160d57816112a0565b5090919050565b611288846323b872dd60e01b85858560405160240161122493929190611a01565b600061168a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661128e9092919063ffffffff16565b8051909150156112c657808060200190518101906116a89190611946565b6112c65760405162461bcd60e51b815260040161063590611dcc565b6060824710156116e65760405162461bcd60e51b815260040161063590611b10565b6116ef856118a4565b61170b5760405162461bcd60e51b815260040161063590611d5e565b600080866001600160a01b0316858760405161172791906119b7565b60006040518083038185875af1925050503d8060008114611764576040519150601f19603f3d011682016040523d82523d6000602084013e611769565b606091505b50915091506117798282866118aa565b979650505050505050565b6001600160a01b0383166000908152600d60205260409020600101544290811115611816576040805180820182526001600160a01b0386166000908152600d602052919091205481906117d8908690611eae565b81526020016117e78484611eae565b90526001600160a01b0385166000908152600d6020908152604090912082518155910151600190910155611288565b6040805180820182526001600160a01b0386166000908152600d60205291909120548190611845908690611eae565b81526001600160a01b0386166000908152600d6020908152604090912060010154910190611874908590611eae565b90526001600160a01b0385166000908152600d602090815260409091208251815591015160019091015550505050565b3b151590565b606083156118b95750816112a0565b8251156118c95782518084602001fd5b8160405162461bcd60e51b81526004016106359190611a49565b80356001600160a01b03811681146104d257600080fd5b60006020828403121561190b578081fd5b6112a0826118e3565b600080600060608486031215611928578182fd5b611931846118e3565b95602085013595506040909401359392505050565b600060208284031215611957578081fd5b815180151581146112a0578182fd5b600060208284031215611977578081fd5b5035919050565b60006020828403121561198f578081fd5b5051919050565b600080604083850312156119a8578182fd5b50508035926020909101359150565b600082516119c9818460208701611f1c565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6000602082528251806020840152611a68816040850160208701611f1c565b601f01601f19169190910160400192915050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601d908201527f74696d657374616d702063616e7420626520696e207468652070617374000000604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60408201527f722063616c6c0000000000000000000000000000000000000000000000000000606082015260800190565b60208082526024908201527f6d757374206c6f636b20746f6b656e7320666f72206174206c6561737420312060408201527f7765656b00000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601d908201527f616d6f756e74206d7573742062652067726561746572207468616e2030000000604082015260600190565b60208082526026908201527f6d757374206c6f636b20746f6b656e7320666f72206174206c6561737420313260408201527f207765656b730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526014908201527f696e73756666696369656e742062616c616e6365000000000000000000000000604082015260600190565b60208082526018908201527f50726f76696465642072657761726420746f6f20686967680000000000000000604082015260600190565b6020808252602f908201527f6d757374206c6f636b20746f6b656e7320666f72206c657373207468616e2f6560408201527f7175616c20746f20203420796561720000000000000000000000000000000000606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b60208082526016908201527f77697468647261772062616c616e636520666972737400000000000000000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526017908201527f6e6f206c6f636b656442616c616e636520657869737473000000000000000000604082015260600190565b90815260200190565b918252602082015260400190565b60008219821115611ec157611ec1611f48565b500190565b600082611ee157634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611f0057611f00611f48565b500290565b600082821015611f1757611f17611f48565b500390565b60005b83811015611f37578181015183820152602001611f1f565b838111156112885750506000910152565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220268bbb831e0c5542061a55039a96b6f1f2dd9f58eee64b4e1a2826f27a3b43bf64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102405760003560e01c806370a0823111610145578063cd3daf9d116100bd578063ebe2b12b1161008c578063f215793211610071578063f215793214610435578063f2fde38b1461043d578063fc0c546a1461045057610240565b8063ebe2b12b1461041a578063eedad66b1461042257610240565b8063cd3daf9d146103fa578063df0dd6bb14610402578063df136d651461040a578063e9fad8ee1461041257610240565b806380faa57d116101145780638b876347116100f95780638b876347146103ca5780638da5cb5b146103dd578063c8f33c91146103f257610240565b806380faa57d146103af578063843592d3146103b757610240565b806370a0823114610379578063715018a61461038c5780637b0472f0146103945780637b0a47ee146103a757610240565b806320d43db0116101d85780633d18b912116101a7578063568914121161018c578063568914121461034957806358e9a815146103515780635c975abb1461036457610240565b80633d18b9121461032e578063556f6e6b1461033657610240565b806320d43db0146102ed5780632e1a7d4d14610300578063386a9525146103135780633c6b16ab1461031b57610240565b8063127ad35311610214578063127ad353146102b557806318160ddd146102ca5780631c1f78eb146102d25780631c5a0914146102da57610240565b80628cc26214610245578063034f98e51461026e5780630483a7f6146102815780630700037d146102a2575b600080fd5b6102586102533660046118fa565b610458565b6040516102659190611e97565b60405180910390f35b61025861027c3660046118fa565b6104d7565b61029461028f3660046118fa565b610567565b604051610265929190611ea0565b6102586102b03660046118fa565b610580565b6102c86102c33660046118fa565b610592565b005b6102586105f4565b6102586105fb565b6102c86102e8366004611966565b610612565b6102586102fb3660046118fa565b6106ff565b6102c861030e366004611966565b610711565b61025861088d565b6102c8610329366004611966565b610893565b6102c8610ab0565b6102c8610344366004611966565b610c70565b610258610d30565b6102c861035f366004611914565b610d36565b61036c610d73565b6040516102659190611a3e565b6102586103873660046118fa565b610d7c565b6102c8610d97565b6102c86103a2366004611996565b610de2565b610258610e16565b610258610e1c565b6102586103c53660046118fa565b610e2a565b6102586103d83660046118fa565b610e6b565b6103e5610e7d565b60405161026591906119d3565b610258610e8c565b610258610e92565b610258610ef6565b610258610efc565b6102c8610f02565b610258610f16565b6102c8610430366004611966565b610f1c565b6103e56110d2565b6102c861044b3660046118fa565b6110e6565b6103e5611154565b6001600160a01b0381166000908152600c6020908152604080832054600b909252822054670de0b6b3a76400009061048e610e92565b6104989190611f05565b6001600160a01b0385166000908152600d60205260409020546104bb9190611ee6565b6104c59190611ec6565b6104cf9190611eae565b90505b919050565b6001600160a01b0381166000908152600d60205260408120600181015490544282158061050357508083105b8061050c575081155b1561051d57600093505050506104d2565b6000610e1061052c8386611f05565b6105369190611ec6565b61054290610e10611ee6565b9050630784ce006105538285611ee6565b61055d9190611ec6565b9695505050505050565b600d602052600090815260409020805460019091015482565b600c6020526000908152604090205481565b6001600160a01b0381166000908152600a60205260409020546009546105b9908290611f05565b6009556105c5826104d7565b6001600160a01b0383166000908152600a602052604090208190556009546105ed9190611eae565b6009555050565b6008545b90565b600060055460045461060d9190611ee6565b905090565b62093a8081101561063e5760405162461bcd60e51b815260040161063590611b6d565b60405180910390fd5b630784ce008111156106625760405162461bcd60e51b815260040161063590611d01565b336000908152600d602052604090205461068e5760405162461bcd60e51b815260040161063590611e60565b336000908152600d602052604090206001015442106106bf5760405162461bcd60e51b815260040161063590611d95565b336000908152600d60205260409020600101546106dd908290611eae565b336000818152600d60205260409020600101919091556106fc90610592565b50565b600a6020526000908152604090205481565b600260015414156107345760405162461bcd60e51b815260040161063590611e29565b600260015533610742610e92565b60075561074d610e1c565b6006556001600160a01b038116156107945761076881610458565b6001600160a01b0382166000908152600c6020908152604080832093909355600754600b909152919020555b600082116107b45760405162461bcd60e51b815260040161063590611bca565b336000908152600d60205260409020546107e05760405162461bcd60e51b815260040161063590611c93565b6107e933610e2a565b8211156107f557600080fd5b6108296001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633846112a7565b816008546108379190611f05565b600855610843826112cb565b61084c33610592565b7f31b1dcbb078c03f6346db59ee77d2cd25542dcdc90c03978beea4e90362d5f5f338360405161087d929190611a25565b60405180910390a1505060018055565b60055481565b61089b611344565b6001600160a01b03166108ac610e7d565b6001600160a01b0316146108d25760405162461bcd60e51b815260040161063590611c5e565b60006108dc610e92565b6007556108e7610e1c565b6006556001600160a01b0381161561092e5761090281610458565b6001600160a01b0382166000908152600c6020908152604080832093909355600754600b909152919020555b600354421061094c576005546109449083611ec6565b60045561098e565b60004260035461095c9190611f05565b905060006004548261096e9190611ee6565b60055490915061097e8286611eae565b6109889190611ec6565b60045550505b6040516370a0823160e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a08231906109dd9030906004016119d3565b60206040518083038186803b1580156109f557600080fd5b505afa158015610a09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2d919061197e565b905060055481610a3d9190611ec6565b6004541115610a5e5760405162461bcd60e51b815260040161063590611cca565b426006819055600554610a7091611eae565b6003556040517fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d90610aa3908590611e97565b60405180910390a1505050565b60026001541415610ad35760405162461bcd60e51b815260040161063590611e29565b600260015533610ae1610e92565b600755610aec610e1c565b6006556001600160a01b03811615610b3357610b0781610458565b6001600160a01b0382166000908152600c6020908152604080832093909355600754600b909152919020555b336000908152600c60205260409020548015610c6857336000908152600c60205260408120819055610b66600a83611ec6565b90506000610b75600983611ee6565b9050610bab6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633846112a7565b6002546040517f282d3fdf0000000000000000000000000000000000000000000000000000000081526101009091046001600160a01b03169063282d3fdf90610bfa9033908590600401611a25565b600060405180830381600087803b158015610c1457600080fd5b505af1158015610c28573d6000803e3d6000fd5b505050507fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e04863383604051610c5d929190611a25565b60405180910390a150505b505060018055565b610c78611344565b6001600160a01b0316610c89610e7d565b6001600160a01b031614610caf5760405162461bcd60e51b815260040161063590611c5e565b6000610cb9610e92565b600755610cc4610e1c565b6006556001600160a01b03811615610d0b57610cdf81610458565b6001600160a01b0382166000908152600c6020908152604080832093909355600754600b909152919020555b428211610d2a5760405162461bcd60e51b815260040161063590611ad9565b50600355565b60085481565b60026001541415610d595760405162461bcd60e51b815260040161063590611e29565b6002600155610d6a83338484611348565b50506001805550565b60025460ff1690565b6001600160a01b03166000908152600d602052604090205490565b610d9f611344565b6001600160a01b0316610db0610e7d565b6001600160a01b031614610dd65760405162461bcd60e51b815260040161063590611c5e565b610de06000611596565b565b60026001541415610e055760405162461bcd60e51b815260040161063590611e29565b6002600155610c6833808484611348565b60045481565b600061060d426003546115fe565b6001600160a01b0381166000908152600d6020526040812060010154819042106104cf5750506001600160a01b03166000908152600d602052604090205490565b600b6020526000908152604090205481565b6000546001600160a01b031690565b60065481565b600060085460001415610ea857506007546105f8565b600854600454600654610eb9610e1c565b610ec39190611f05565b610ecd9190611ee6565b610edf90670de0b6b3a7640000611ee6565b610ee99190611ec6565b60075461060d9190611eae565b60095481565b60075481565b610f0e61030e33610e2a565b610de0610ab0565b60035481565b60008111610f3c5760405162461bcd60e51b815260040161063590611bca565b6040516370a0823160e01b815281906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190610f8a9033906004016119d3565b60206040518083038186803b158015610fa257600080fd5b505afa158015610fb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fda919061197e565b1015610ff85760405162461bcd60e51b815260040161063590611c93565b336000908152600d60205260409020546110245760405162461bcd60e51b815260040161063590611e60565b336000908152600d602052604090206001015442106110555760405162461bcd60e51b815260040161063590611d95565b61108a6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084611614565b806008546110989190611eae565b600855336000908152600d60205260409020546110b6908290611eae565b336000818152600d60205260409020919091556106fc90610592565b60025461010090046001600160a01b031681565b6110ee611344565b6001600160a01b03166110ff610e7d565b6001600160a01b0316146111255760405162461bcd60e51b815260040161063590611c5e565b6001600160a01b03811661114b5760405162461bcd60e51b815260040161063590611a7c565b6106fc81611596565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081846001600160a01b031663dd62ed3e30866040518363ffffffff1660e01b81526004016111a99291906119e7565b60206040518083038186803b1580156111c157600080fd5b505afa1580156111d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f9919061197e565b6112039190611eae565b90506112888463095ea7b360e01b8584604051602401611224929190611a25565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611635565b50505050565b606061129d84846000856116c4565b90505b9392505050565b6112c68363a9059cbb60e01b8484604051602401611224929190611a25565b505050565b336000908152600d602052604090206001015442106106fc57336000908152600d602052604090205481141561131657336000908152600d60205260408120818155600101556106fc565b336000908152600d6020526040902054611331908290611f05565b336000908152600d602052604090205550565b3390565b83611351610e92565b60075561135c610e1c565b6006556001600160a01b038116156113a35761137781610458565b6001600160a01b0382166000908152600c6020908152604080832093909355600754600b909152919020555b600083116113c35760405162461bcd60e51b815260040161063590611bca565b626ebe008210156113e65760405162461bcd60e51b815260040161063590611c01565b630784ce0082111561140a5760405162461bcd60e51b815260040161063590611d01565b6040516370a0823160e01b815283906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a08231906114589088906004016119d3565b60206040518083038186803b15801561147057600080fd5b505afa158015611484573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a8919061197e565b10156114c65760405162461bcd60e51b815260040161063590611c93565b6001600160a01b0385166000908152600d6020526040902054156114fc5760405162461bcd60e51b815260040161063590611d95565b6115316001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016853086611614565b8260085461153f9190611eae565b60085561154d858484611784565b61155685610592565b7f6340a0e6b8ea35da618479a712fc50894736e440f8adf9c52f61e62b52b1d97a8584604051611587929190611a25565b60405180910390a15050505050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081831061160d57816112a0565b5090919050565b611288846323b872dd60e01b85858560405160240161122493929190611a01565b600061168a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661128e9092919063ffffffff16565b8051909150156112c657808060200190518101906116a89190611946565b6112c65760405162461bcd60e51b815260040161063590611dcc565b6060824710156116e65760405162461bcd60e51b815260040161063590611b10565b6116ef856118a4565b61170b5760405162461bcd60e51b815260040161063590611d5e565b600080866001600160a01b0316858760405161172791906119b7565b60006040518083038185875af1925050503d8060008114611764576040519150601f19603f3d011682016040523d82523d6000602084013e611769565b606091505b50915091506117798282866118aa565b979650505050505050565b6001600160a01b0383166000908152600d60205260409020600101544290811115611816576040805180820182526001600160a01b0386166000908152600d602052919091205481906117d8908690611eae565b81526020016117e78484611eae565b90526001600160a01b0385166000908152600d6020908152604090912082518155910151600190910155611288565b6040805180820182526001600160a01b0386166000908152600d60205291909120548190611845908690611eae565b81526001600160a01b0386166000908152600d6020908152604090912060010154910190611874908590611eae565b90526001600160a01b0385166000908152600d602090815260409091208251815591015160019091015550505050565b3b151590565b606083156118b95750816112a0565b8251156118c95782518084602001fd5b8160405162461bcd60e51b81526004016106359190611a49565b80356001600160a01b03811681146104d257600080fd5b60006020828403121561190b578081fd5b6112a0826118e3565b600080600060608486031215611928578182fd5b611931846118e3565b95602085013595506040909401359392505050565b600060208284031215611957578081fd5b815180151581146112a0578182fd5b600060208284031215611977578081fd5b5035919050565b60006020828403121561198f578081fd5b5051919050565b600080604083850312156119a8578182fd5b50508035926020909101359150565b600082516119c9818460208701611f1c565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6000602082528251806020840152611a68816040850160208701611f1c565b601f01601f19169190910160400192915050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601d908201527f74696d657374616d702063616e7420626520696e207468652070617374000000604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60408201527f722063616c6c0000000000000000000000000000000000000000000000000000606082015260800190565b60208082526024908201527f6d757374206c6f636b20746f6b656e7320666f72206174206c6561737420312060408201527f7765656b00000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601d908201527f616d6f756e74206d7573742062652067726561746572207468616e2030000000604082015260600190565b60208082526026908201527f6d757374206c6f636b20746f6b656e7320666f72206174206c6561737420313260408201527f207765656b730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526014908201527f696e73756666696369656e742062616c616e6365000000000000000000000000604082015260600190565b60208082526018908201527f50726f76696465642072657761726420746f6f20686967680000000000000000604082015260600190565b6020808252602f908201527f6d757374206c6f636b20746f6b656e7320666f72206c657373207468616e2f6560408201527f7175616c20746f20203420796561720000000000000000000000000000000000606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b60208082526016908201527f77697468647261772062616c616e636520666972737400000000000000000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526017908201527f6e6f206c6f636b656442616c616e636520657869737473000000000000000000604082015260600190565b90815260200190565b918252602082015260400190565b60008219821115611ec157611ec1611f48565b500190565b600082611ee157634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611f0057611f00611f48565b500290565b600082821015611f1757611f17611f48565b500390565b60005b83811015611f37578181015183820152602001611f1f565b838111156112885750506000910152565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220268bbb831e0c5542061a55039a96b6f1f2dd9f58eee64b4e1a2826f27a3b43bf64736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getVoiceCredits(address)": {
        "details": "todo - check if multiplier is needed for calculating square root of smaller balances",
        "params": {
          "_address": "address to get voice credits for"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getVoiceCredits(address)": {
        "notice": "this returns the current voice credit balance of an address. voice credits decays over time. the amount returned is up to date, whereas the amount stored in `public voiceCredits` is saved only during some checkpoints."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/core/dao/LockStaking.sol:LockStaking",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 207,
        "contract": "contracts/core/dao/LockStaking.sol:LockStaking",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 122,
        "contract": "contracts/core/dao/LockStaking.sol:LockStaking",
        "label": "_paused",
        "offset": 0,
        "slot": "2",
        "type": "t_bool"
      },
      {
        "astId": 2949,
        "contract": "contracts/core/dao/LockStaking.sol:LockStaking",
        "label": "rewardsEscrow",
        "offset": 1,
        "slot": "2",
        "type": "t_contract(IRewardsEscrow)7715"
      },
      {
        "astId": 2952,
        "contract": "contracts/core/dao/LockStaking.sol:LockStaking",
        "label": "periodFinish",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 2955,
        "contract": "contracts/core/dao/LockStaking.sol:LockStaking",
        "label": "rewardRate",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 2958,
        "contract": "contracts/core/dao/LockStaking.sol:LockStaking",
        "label": "rewardsDuration",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 2960,
        "contract": "contracts/core/dao/LockStaking.sol:LockStaking",
        "label": "lastUpdateTime",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 2962,
        "contract": "contracts/core/dao/LockStaking.sol:LockStaking",
        "label": "rewardPerTokenStored",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 2964,
        "contract": "contracts/core/dao/LockStaking.sol:LockStaking",
        "label": "totalLocked",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 2966,
        "contract": "contracts/core/dao/LockStaking.sol:LockStaking",
        "label": "totalVoiceCredits",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 2970,
        "contract": "contracts/core/dao/LockStaking.sol:LockStaking",
        "label": "voiceCredits",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 2974,
        "contract": "contracts/core/dao/LockStaking.sol:LockStaking",
        "label": "userRewardPerTokenPaid",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 2978,
        "contract": "contracts/core/dao/LockStaking.sol:LockStaking",
        "label": "rewards",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 2983,
        "contract": "contracts/core/dao/LockStaking.sol:LockStaking",
        "label": "lockedBalances",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_address,t_struct(LockedBalance)2943_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IRewardsEscrow)7715": {
        "encoding": "inplace",
        "label": "contract IRewardsEscrow",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(LockedBalance)2943_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct LockStaking.LockedBalance)",
        "numberOfBytes": "32",
        "value": "t_struct(LockedBalance)2943_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(LockedBalance)2943_storage": {
        "encoding": "inplace",
        "label": "struct LockStaking.LockedBalance",
        "members": [
          {
            "astId": 2940,
            "contract": "contracts/core/dao/LockStaking.sol:LockStaking",
            "label": "balance",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 2942,
            "contract": "contracts/core/dao/LockStaking.sol:LockStaking",
            "label": "end",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}